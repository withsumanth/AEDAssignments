/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.LoginScreen.ManageSystemAdmin;

import Business.Business;
import Business.HumanResources.PersonDirectory.Person;
import Business.SystemAdministration.Users;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanth
 */
public class SearchUserJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business business;
    SearchUserJPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business = business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAccJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userAccJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserName", "Account Role", "Account Status", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 620, 119));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("                            Search User Account");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 410, 60));
        add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 140, 50));

        jLabel2.setText("          Enter UserName: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 104, 140, 40));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 110, 30));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) userAccJTable.getModel();
        String searchValue = searchTxt.getText();
        if(searchValue.trim().length()==0){
             dtm.setRowCount(0);
             JOptionPane.showMessageDialog(null, "Please enter UserName for Search Value");
             return;
        }
        ArrayList<Users> userList = new ArrayList();
        userList = business.getUserAccountDirectory().searchUser(searchValue);
        if(userList.size()==0){
            dtm.setRowCount(0);
            JOptionPane.showMessageDialog(null, "UserName entered is Invalid");
            return;
        }
        ArrayList<Person> personList = new ArrayList();
        for(Person p:business.getPersonDirectory().getPersonDirectory()){
            if(p.getUser()!=null){
                if(p.getUser().getUserName().equals(searchValue)){
                personList.add(p);
            }
            }
        }
        populateSearchTable(personList);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed
    
    public void populateSearchTable(ArrayList<Person> userList){
        DefaultTableModel dtm = (DefaultTableModel) userAccJTable.getModel();
        dtm.setRowCount(0);
        for (Person u : userList) {
            Object[] row = new Object[4];
            row[0] = u.getUser().getUserName();
            row[1] = u.getUser().getRole();
            row[2] = u.getUser().getAccountStatus();
            row[3] = u;
            dtm.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTable userAccJTable;
    // End of variables declaration//GEN-END:variables
}
