/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.LoginScreen.ManageSystemAdmin;

import Business.Business;
import Business.HumanResources.PersonDirectory.Person;
import Business.SystemAdministration.Users;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Sumanth
 */
public class ManageSystemAdminJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business business;
    Users currentUser;
    public ManageSystemAdminJPanel(JPanel userProcessContainer, Business business, Users currentUser) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.currentUser = currentUser;
        populateJTable();
    }
    
    public void populateJTable(){
        DefaultTableModel dtm = (DefaultTableModel) userAccJTable.getModel();
        dtm.setRowCount(0);
        for (Person u : business.getPersonDirectory().getPersonDirectory()) {
            Object[] row = new Object[5];
            if(u.getUser()!=null){
                row[4] = u.getUser();
                row[1] = u.getUser().getPassword();
                row[2] = u.getUser().getRole();
                row[3] = u.getUser().getAccountStatus();
                row[0] = u;
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAccJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        findUserBtn = new javax.swing.JButton();
        updateUserBtn = new javax.swing.JButton();
        addUserBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userAccJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person", "Password", "Account Role", "Account Status", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userAccJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 680, 119));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("                            Manage User Account Directory");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 410, 60));

        findUserBtn.setText("Find User Account >>");
        findUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findUserBtnActionPerformed(evt);
            }
        });
        add(findUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 160, 40));

        updateUserBtn.setText("Update User Account >>");
        updateUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserBtnActionPerformed(evt);
            }
        });
        add(updateUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 360, 160, 40));

        addUserBtn.setText("New User Account >>");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });
        add(addUserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 160, 40));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        deleteUser.setText("Delete User Details");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });
        add(deleteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 293, 160, 50));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void findUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findUserBtnActionPerformed
        SearchUserJPanel panel = new SearchUserJPanel(userProcessContainer,business);
        userProcessContainer.add("SearchUserJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_findUserBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        AddUserJPanel panel = new AddUserJPanel(userProcessContainer,business);
        userProcessContainer.add("AddUserJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void updateUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserBtnActionPerformed
        int selectedRow = userAccJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please Select any Row");
            return;
        }
        Person person = (Person) userAccJTable.getValueAt(selectedRow, 0);
        UpdateUserJPanel panel = new UpdateUserJPanel(userProcessContainer,business,person,currentUser);
        userProcessContainer.add("UpdateUserJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_updateUserBtnActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
        int selectedRow = userAccJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please Select any Row");
            return;
        }
        Person person = (Person) userAccJTable.getValueAt(selectedRow, 0);
        if(person.getUser().getUserName().equals(currentUser.getUserName())){
              JOptionPane.showMessageDialog(null, "User cannot delete his own details");
              return;
        }
        int dialogButton = JOptionPane.YES_NO_OPTION;
        ArrayList<Person> personList= new ArrayList();
            personList = business.getPersonDirectory().getPersonDirectory();
            int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete Selected User details", "Warning", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            business.getPersonDirectory().deletePerson(person);
            business.getUserAccountDirectory().deletePerson(person.getUser());
            populateJTable();
            JOptionPane.showMessageDialog(null, "User details deleted successfully");
        }
    }//GEN-LAST:event_deleteUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton findUserBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateUserBtn;
    private javax.swing.JTable userAccJTable;
    // End of variables declaration//GEN-END:variables
}
