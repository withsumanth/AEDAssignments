/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierRole;

import Business.Employee.Employee;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MessageWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanth
 */
public class SupplierCheckJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    WorkRequest request;
    ArrayList<Organization> orgListSupp;
    UserAccount currentAccount;
    ArrayList<Organization> orgListDist;

    /**
     * Creates new form ProcessWorkRequestJPanel
     */
    public SupplierCheckJPanel(JPanel userProcessContainer, UserAccount account, WorkRequest request, ArrayList<Organization> orgListSupp, UserAccount currentAccount,ArrayList<Organization> orgListDist) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.request = request;
        this.orgListSupp = orgListSupp;
        this.currentAccount = currentAccount;
        this.orgListDist = orgListDist;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        for (Organization o : orgListSupp) {
            if (o.toString().equals(Organization.Type.Supplier.getValue())) {
                for (Employee e : o.getEmployeeDirectory().getEmployeeList()) {
                    if (o.getInventory().getVaccine().equals(request.getInventory().getVaccine())) {
                        Object[] row = new Object[4];
                        row[0] = e;
                        row[1] = o;
                        row[2] = o.getInventory().getVaccine();
                        row[3] = o.getInventory().getQuantity();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setText("Send Vaccine to Clinic");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, 170, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Supplier Inventory");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 430, 30));

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Organization", "Vaccine", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 740, 130));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Any Row");
            return;
        }
        int quantity = (int) workRequestJTable.getValueAt(selectedRow, 3);
        if (quantity <= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "There is no vaccine available for selected row. Do you want to add vaccine?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                if (request.getStatus().equals("Sent to Provider")) {
                        Organization org = (Organization) workRequestJTable.getValueAt(selectedRow, 1);
                        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                        userProcessContainer.add("SupplierAddQuantityJPanel", new SupplierAddQuantityJPanel(userProcessContainer, account, request, org, currentAccount));
                        layout.next(userProcessContainer);

                } else if (request.getStatus().equals("Sent to Distributor") || request.getStatus().equals("Sent to CDC")) {
                    JOptionPane.showMessageDialog(null, "Request has not come to supplier");
                    return;
                } else if (request.getStatus().equals("Sent to Distributor from Provider")) {
                    JOptionPane.showMessageDialog(null, "Request has already been sent");
                    return;
                }
            }
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "There are vaccines available in the inventory. Do you want to proceed with the quantity to be sent?", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                if (request.getStatus().equals("Sent to Provider")) {
                        Organization org = (Organization) workRequestJTable.getValueAt(selectedRow, 1);
                        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                        userProcessContainer.add("SupplierPassQuantityJpanel", new SupplierPassQuantityJpanel(userProcessContainer, account, request, org, currentAccount,orgListDist));
                        layout.next(userProcessContainer);
                } else{
                    JOptionPane.showMessageDialog(null, "Request has already been sent/Not Approved");
                    return;
                }
            }
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SupplierWorkAreaJPanel dwjp = (SupplierWorkAreaJPanel) component;
        dwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
