/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdminLogin;

import Business.Business;
import Business.SalesPerson;
import Business.Supplier;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanth
 */
public class ManageSalesPerson extends javax.swing.JPanel {

    /**
     * Creates new form ManageSalesPerson
     */
    JPanel userProcessContainer;
    Business business;
    ManageSalesPerson(JPanel userProcessContainer, Business business) {
         initComponents();
         this.userProcessContainer=userProcessContainer;
         this.business=business;
         if(business.getSalespersonDir().getSalespersonDir().size()==0){
             addAllSalesPerson();
         }
         populateJTable();
    }
    
    public void populateJTable() {
        DefaultTableModel tabMod = (DefaultTableModel) salesTable.getModel();
        tabMod.setRowCount(0);
        for (SalesPerson ad : business.getSalespersonDir().getSalespersonDir()) {
            Object row[] = new Object[4];
            row[0] = ad;
            row[1] = ad.getSalesUserName();
            row[2] = ad.getSalesPassword();
            row[3] = ad.getSalesAccountStatus();
            tabMod.addRow(row);
        }
    }
    
    public void addAllSalesPerson(){
        String csvFile = "SalesPerson.csv";
	        BufferedReader bufferedReader = null;
	        String line = "";
	        String cvsSplitBy = ",";
	        try {
	            bufferedReader = new BufferedReader(new FileReader(csvFile));
                    ArrayList<String[]> dataCsvArr = new ArrayList();
                    int count = 0;
	            while ((line = bufferedReader.readLine()) != null) {
	                String[] dataFromCsv = line.split(cvsSplitBy);
                        dataCsvArr.add(count,dataFromCsv);
                        count++;
	            }
                    for(int i=1;i<dataCsvArr.size();i++){
                        SalesPerson suppDet = business.getSalespersonDir().addSalesPerson();
                        String valuesOfArray[] = dataCsvArr.get(i);
                        suppDet.setSalesPersonName(valuesOfArray[0]);
                        suppDet.setSalesUserName(valuesOfArray[1]);
                        suppDet.setSalesPassword(business.getPassEncryption().encrypt(valuesOfArray[2]));
                        suppDet.setSalesAccountStatus(valuesOfArray[3]);
                        suppDet.setSalesPersonRole("Sales Person");
                    }
	            bufferedReader.close();
	        } catch (FileNotFoundException e) {
	            e.printStackTrace();
	  } catch (IOException ex) {
               Logger.getLogger(ManageSupplierJPanel.class.getName()).log(Level.SEVERE, null, ex);
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesSearchTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        delSuppBtn = new javax.swing.JButton();
        updSuppBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchUserNameTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 600, -1, -1));

        salesSearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales Person Name", "Sales Person UserName", "Password", "Account Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salesSearchTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 730, 110));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("           Manage Sales Person");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 210, 40));

        delSuppBtn.setText("Delete");
        delSuppBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delSuppBtnActionPerformed(evt);
            }
        });
        add(delSuppBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 340, -1, -1));

        updSuppBtn.setText("Update");
        updSuppBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updSuppBtnActionPerformed(evt);
            }
        });
        add(updSuppBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, -1, -1));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, -1, -1));

        jLabel2.setText("Enter Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, 140, 40));
        add(searchUserNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, 170, 40));

        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales Person Name", "Sales Person UserName", "Password", "Account Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(salesTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 720, 210));
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void delSuppBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delSuppBtnActionPerformed
        int selectedRow = salesTable.getSelectedRow();
        if(selectedRow>=0){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null,"Would you like to delete the account details", "Warning", dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                SalesPerson salesPerson = (SalesPerson) salesTable.getValueAt(selectedRow,0);
                business.getSalespersonDir().removeSupplier(salesPerson);
                populateJTable();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please Select Any Row","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_delSuppBtnActionPerformed

    private void updSuppBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updSuppBtnActionPerformed
        int selectedRow = salesTable.getSelectedRow();
        if(selectedRow>=0){
            SalesPerson salesPerson = (SalesPerson) salesTable.getValueAt(selectedRow, 0);
            UpdateSalesPersonJPanel panel = new UpdateSalesPersonJPanel(userProcessContainer,business,salesPerson);
            userProcessContainer.add("UpdateSalesPersonJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }else{
            JOptionPane.showMessageDialog(null, "Please Select Any Row");
        }
    }//GEN-LAST:event_updSuppBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String searchUserName = searchUserNameTxt.getText();
        DefaultTableModel tabMod = (DefaultTableModel) salesSearchTable.getModel();
        tabMod.setRowCount(0);
        if(searchUserName.trim().length()==0){
            JOptionPane.showMessageDialog(null, "Please enter UserName for search");
            return;
        }
        SalesPerson foundPerson = business.getSalespersonDir().searchSalesPerson(searchUserName);
        if(foundPerson==null){
            JOptionPane.showMessageDialog(null, "UserName entered is invalid");
            return;
        }
            Object row[] = new Object[4];
            row[0] = foundPerson;
            row[1] = foundPerson.getSalesUserName();
            row[2] = foundPerson.getSalesPassword();
            row[3] = foundPerson.getSalesAccountStatus();
            tabMod.addRow(row);
    }//GEN-LAST:event_searchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton delSuppBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable salesSearchTable;
    private javax.swing.JTable salesTable;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchUserNameTxt;
    private javax.swing.JButton updSuppBtn;
    // End of variables declaration//GEN-END:variables
}
