/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdminLogin.Revenue;

import Business.Business;
import Business.Order;
import Business.OrderList;
import Business.Product;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Stream;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanth
 */
public class TopThreeSalesJpanel extends javax.swing.JPanel {

    /**
     * Creates new form TopThreeSalesJpanel
     */
    JPanel userProcessContainer;
    Business business;
    public TopThreeSalesJpanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        getTopThreeProducts();
    }
    
    public void getTopThreeProducts(){
        ArrayList<OrderList> listOfOrders = business.getMasterOrderCatalog().getOrderList();
        ArrayList<Product> prodList= new ArrayList();
        ArrayList<Double> priceList= new ArrayList();
        ArrayList<Integer> quantity= new ArrayList();
        for(OrderList ol:listOfOrders){
            for(Order o:ol.getOrderList()){
                    prodList.add(o.getProduct());
                    priceList.add(o.getQuantity()*o.getSalesPrice());
                    quantity.add(o.getQuantity());
            }
        }
        for(int i=0;i<prodList.size();i++){
            for(int j=i+1;j<prodList.size();j++){
                if(prodList.get(i).equals(prodList.get(j))){
                    priceList.set(i,priceList.get(i)+priceList.get(j));
                    priceList.remove(j);
                    quantity.remove(j);
                    prodList.remove(j);
                    j--;
                }
            }
        }
        ArrayList<Double> priceQuan;
        Map<Product,ArrayList<Double>> map= new HashMap();
        for(int i=0;i<prodList.size();i++){
            priceQuan= new ArrayList();
            priceQuan.add(priceList.get(i));
            priceQuan.add((double)quantity.get(i));
            map.put(prodList.get(i), priceQuan);
        }
        Map<Product,ArrayList<Double>> topProdMap= new HashMap();
        for(Map.Entry<Product,ArrayList<Double>> entry:map.entrySet()){
            double targetPrice = entry.getKey().getPrice()*entry.getValue().get(1);
            double revenue  = entry.getValue().get(0);
            if(revenue>targetPrice){
                topProdMap.put(entry.getKey(),entry.getValue());
            }
        }
        Set<Map.Entry<Product, ArrayList<Double>>> set = topProdMap.entrySet();
        List<Map.Entry<Product, ArrayList<Double>>> list = new ArrayList<Map.Entry<Product, ArrayList<Double>>>(set);
        Collections.sort( list, new Comparator<Map.Entry<Product, ArrayList<Double>>>()
        {
            public int compare( Map.Entry<Product, ArrayList<Double>> o1, Map.Entry<Product, ArrayList<Double>> o2 )
            {
                return (o2.getValue().get(0)).compareTo( o1.getValue().get(0));
            }
        } );
        DefaultTableModel model = (DefaultTableModel) prodJTable.getModel();
        model.setRowCount(0);
        int sizeOfMap;
        if(list.size()<3){
            sizeOfMap = list.size();
        }else{
            sizeOfMap  = 3;
        }
        for(int i=0;i<sizeOfMap;i++){
            Object row[] = new Object[6];
            row[0] = list.get(i).getKey().getProdName();
            row[1] = list.get(i).getValue().get(0);
            row[2] = list.get(i).getKey().getPrice()*list.get(i).getValue().get(1);
            row[3] = list.get(i).getKey().getPrice()*list.get(i).getValue().get(1)*1.2;
            row[4] = (list.get(i).getKey().getPrice()*list.get(i).getValue().get(1)*1.2)-(list.get(i).getKey().getPrice()*list.get(i).getValue().get(1));
            row[5] = list.get(i).getValue().get(0)- list.get(i).getKey().getPrice()*list.get(i).getValue().get(1)*1.2;
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prodJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("       Top 3 products consistently sold above market target price");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 500, 50));

        prodJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Revenue from Product", "Actual Price", "Target Price", "Gap", "Missed Revenue/Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(prodJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 750, 120));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable prodJTable;
    // End of variables declaration//GEN-END:variables
}
