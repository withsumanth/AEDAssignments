/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.AdminLogin.Revenue;

import Business.Business;
import Business.Order;
import Business.OrderList;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sumanth
 */
public class RealTimeCompensationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RealTimeCompensationJPanel
     */
    JPanel userProcessContainer;
    Business business;
    List<String> salesPerson;

    public RealTimeCompensationJPanel(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        salesPerson = new ArrayList();
        calculateRealTimeCompensation();
    }

    public void calculateRealTimeCompensation() {
        ArrayList<OrderList> listOfOrders = business.getMasterOrderCatalog().getOrderList();
        for (OrderList ol : listOfOrders) {
            for (Order o : ol.getOrderList()) {
                salesPerson.add(o.getSalesPerson().getSalesPersonName());
            }
        }
        salesPerson = salesPerson.stream().distinct().collect(Collectors.toList());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        prodJTable = new javax.swing.JTable();
        searchBtn = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        compTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("                                 Real-time display of compensation");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 500, 50));

        prodJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales Person Name", "Revenue", "Penalty/Reward"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(prodJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 750, 120));

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 130, 40));

        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));
        add(compTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 110, 40));

        jLabel2.setText("Base Compensation");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 134, 150, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String compensation = compTxt.getText();
        double comp;
        DefaultTableModel model = (DefaultTableModel) prodJTable.getModel();
        if (compensation.trim().length() == 0) {
            JOptionPane.showMessageDialog(null, "Please enter base compensation");
            model.setRowCount(0);
            return;
        }
        try {
            comp = Double.parseDouble(compensation);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please enter double values for compensation");
            model.setRowCount(0);
            return;
        }
        ArrayList<OrderList> listOfOrders = business.getMasterOrderCatalog().getOrderList();
        Map<ArrayList<String>, Double> map = new HashMap();
        ArrayList<String> nameComp;
        double price;
        for (String p : salesPerson) {
            price = 0;
            nameComp = new ArrayList();
            for (OrderList ol : listOfOrders) {
                for (Order o : ol.getOrderList()) {
                    if (o.getSalesPerson().getSalesPersonName().equals(p)) {
                        price = price + (o.getQuantity() * o.getSalesPrice());
                    }
                }
            }
            nameComp.add(p);
            if (comp < price) {
                nameComp.add("Reward");
            } else {
                nameComp.add("Penalty");
            }
            map.put(nameComp, price);
        }
        model.setRowCount(0);
        for (Map.Entry<ArrayList<String>, Double> entry : map.entrySet()) {
            Object row[] = new Object[3];
            row[0] = entry.getKey().get(0);
            row[1] = entry.getValue();
            row[2] = entry.getKey().get(1);
            model.addRow(row);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JTextField compTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable prodJTable;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
